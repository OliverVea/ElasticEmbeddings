// <auto-generated />
using System;
using ElasticEmbeddings.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElasticEmbeddings.Persistence.Migrations
{
    [DbContext(typeof(ElasticEmbeddingsContext))]
    [Migration("20231206022954_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ElasticEmbeddings.Persistence.Entities.DocumentEmbeddingEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Embeddings")
                        .IsRequired()
                        .HasMaxLength(9999)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId")
                        .IsUnique();

                    b.ToTable("DocumentEmbeddings");
                });

            modelBuilder.Entity("ElasticEmbeddings.Persistence.Entities.DocumentEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ElasticEmbeddings.Persistence.Entities.DocumentStateEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId")
                        .IsUnique();

                    b.ToTable("DocumentStates");
                });

            modelBuilder.Entity("ElasticEmbeddings.Persistence.Entities.DocumentEmbeddingEntity", b =>
                {
                    b.HasOne("ElasticEmbeddings.Persistence.Entities.DocumentEntity", "Document")
                        .WithOne("DocumentEmbedding")
                        .HasForeignKey("ElasticEmbeddings.Persistence.Entities.DocumentEmbeddingEntity", "DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("ElasticEmbeddings.Persistence.Entities.DocumentStateEntity", b =>
                {
                    b.HasOne("ElasticEmbeddings.Persistence.Entities.DocumentEntity", "Document")
                        .WithOne("DocumentState")
                        .HasForeignKey("ElasticEmbeddings.Persistence.Entities.DocumentStateEntity", "DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("ElasticEmbeddings.Persistence.Entities.DocumentEntity", b =>
                {
                    b.Navigation("DocumentEmbedding");

                    b.Navigation("DocumentState");
                });
#pragma warning restore 612, 618
        }
    }
}
